/* CUP file for generating a parser */
/* http://www2.cs.tum.edu/projects/cup/ */

package nz.ac.auckland.labtex.generated;
import java_cup.runtime.*;
class LabParser;
action code {:
    Integer sheetnumber = 0;
    String element = null;
:}

/* basics */
terminal        WHITESPACE, BLANKLINE;
terminal String LATEXSTRING, LATEX_CMD, LATEX_HREF;

/* keywords */
terminal        KW_TITLE;

/* commands */
terminal        CMD_TITLE,
                CMD_SHEET,
                CMD_HEADER,
                CMD_CHECK,
                CMD_TEXT;

/* symbols */
terminal        AMPERSAND,
                PERCENT,
                DOLLARSIGN,
                HASHMARK,
                UNDERSCORE,
                LEFTCURLYBRACE,
                RIGHTCURLYBRACE,
                TILDE,
                CARROT,
                BACKSLASH,
                ESCAPED_BACKSLASH;

/* non-terminals */
non terminal String           latex_cmd, tex_file, title;
non terminal String           sheets, sheet, normal_sheet, video_sheet, motion_sheet, calc_y_sheet;
non terminal String           find_cmd, find_cmd_sym, find_left, find_left_sym;
non terminal String           latex_string, string_piece;
non terminal String           sheet_elems, sheet_elem, sheet_text ;

/* latex environments */
non terminal String           curly_elems, curly_elem;
non terminal String     curly_braced, dollar_env, dollar_string, dollar_piece;
non terminal String     ddollar_env, ddollar_string, ddollar_piece;
non terminal            left_curly_brace, right_curly_brace;
non terminal String           cmd_title, cmd_sheet, cmd_text, cmd_header, cmd_check ;
non terminal String     basic_string, groups;
non terminal String     text_string, text_piece_command, text_piece_command_w_par ;
non terminal            opt_whitespace, dollarsign, tilde, percent, escaped_backslash;
non terminal            href, href_string;

/***********
 * grammar *
 ***********/

/* a basic tex file should be a title with a series of sheets */
tex_file            ::= title:t sheets:xs                           {: RESULT = t + "\n" + xs + "\nend"; :}
                        ;
sheets              ::= sheets:xs sheet:s                           {: RESULT = xs + "\n\n" + s; :}
                        | sheet:s                                   {: RESULT = s; :}
                        ;
/* there are a number of sheet types available */
sheet               ::= normal_sheet:s                              {: RESULT = s; :}
                        | video_sheet:s                             {: RESULT = s; :}
                        | motion_sheet:s                            {: RESULT = s; :}
                        | calc_y_sheet:s                            {: RESULT = s; :}
                        ;




/* curly brace { ... } environment */
curly_braced        ::= left_curly_brace curly_elems:s right_curly_brace:w    {: RESULT = s + w; :}
                        ;
curly_elems         ::= curly_elems:ls curly_elem:s                         {: RESULT = ls + s; :}
                        | curly_elem:s                                      {: RESULT = s; :}
                        ;
curly_elem          ::= basic_string:s                                      {: RESULT = s; :}
                        | curly_braced:s                                    {: RESULT = s; :}
                        | dollar_env:s                                      {: RESULT = s; :}
                        | ddollar_env:s                                     {: RESULT = s; :}
                        | latex_cmd                                         {: RESULT = ""; :}
                        | UNDERSCORE                                        {: RESULT = "_"; :}
                        | CARROT                                            {: RESULT = "^"; :}
                        ;


/* dollar (math mode) $ ... $ environment */
dollar_env          ::= dollarsign dollar_string:ls DOLLARSIGN WHITESPACE   {: RESULT = ls + " "; :}
                        | dollarsign dollar_string:ls DOLLARSIGN            {: RESULT = ls; :}
                        ;
dollar_string       ::= dollar_string:ls dollar_piece:s                     {: RESULT = ls + " " + s; :}
                        | dollar_piece:s                                    {: RESULT = s; :}
                        ;
dollar_piece        ::= basic_string:ls                                     {: RESULT = ls; :}
                        | latex_cmd                                         {: RESULT = ""; :}
                        | curly_braced:s                                    {: RESULT = s; :}
                        | UNDERSCORE                                        {: RESULT = "_"; :}
                        | CARROT                                            {: RESULT = "^"; :}
                        ;

/* double dollar $$ ... $$ environment */
ddollar_env         ::= DOLLARSIGN dollarsign
                        ddollar_string:ls
                        DOLLARSIGN dollarsign                               {: RESULT = ls; :}
                        ;
ddollar_string      ::= ddollar_string:ls ddollar_piece:s                   {: RESULT = ls + " " + s; :}
                        | ddollar_piece:s                                   {: RESULT = s; :}
                        ;
ddollar_piece       ::= basic_string:ls                                     {: RESULT = ls; :}
                        | latex_cmd                                         {: RESULT = ""; :}
                        | curly_braced:s                                    {: RESULT = s; :}
                        ;


/* once a Lablet title command is found
 * we use the next curly braced string
 * as the title */
title               ::= cmd_title latex_string:ls
                        {:  RESULT =
                            "Lablet = {\n\tinterface = 1.0,\n\ttitle = " +
                            "\"(TeX) " + ls + "\"\n}\n\n\n" +
                            "function Lablet.buildActivity(builder)"; :}
                        RIGHTCURLYBRACE find_cmd
                        ;
find_left           ::=   find_left BACKSLASH
                        | find_left LATEXSTRING
                        | find_left WHITESPACE
                        | /* empty */
                        ;
find_cmd            ::=   find_cmd LEFTCURLYBRACE
                        | find_cmd RIGHTCURLYBRACE
                        | find_cmd LATEXSTRING
                        | find_cmd BACKSLASH
                        | find_cmd WHITESPACE
                        | find_cmd BLANKLINE
                        | /* empty */
                        ;



normal_sheet        ::= cmd_sheet latex_string:ls RIGHTCURLYBRACE find_cmd sheet_elems:xs
                        {:  ++sheetnumber;
                            RESULT =
                            "    -- SHEET " + sheetnumber + "\n" +
                            "    local sheet = builder:create(\"Sheet\")\n" +
                            "    builder:add(sheet)\n" +
                            "    sheet:setTitle(\"" + ls + "\")\n" +
                            xs; :}
                        ;


sheet_elems         ::= sheet_elems:xs sheet_elem:s                 {: RESULT = xs + s; :}
                        | sheet_elem:s                              {: RESULT = s; :}
                        ;
sheet_elem          ::= cmd_text latex_string:ls BLANKLINE find_cmd          {: RESULT = "    sheet:addText(\"" + ls + "\")\n"; :}
                        | cmd_header latex_string:ls BLANKLINE find_cmd      {: RESULT = "    sheet:addHeader(\"" + ls + "\")\n"; :}
                        | cmd_check latex_string:ls BLANKLINE find_cmd       {: RESULT = "    sheet:addCheckQuestion(\"" + ls + "\")\n"; :}
                        ;


/* stuff that LaTeX treats as text */
latex_string        ::= latex_string:ls string_piece:s              {: RESULT = ls + s; :}
                        | string_piece:s                            {: RESULT = s; :}
                        ;
string_piece        ::= basic_string:s                              {: RESULT = s; :}
                        | latex_cmd                                 {: RESULT = ""; :}
                        | dollar_env:s                              {: RESULT = s; :}
                        | ddollar_env:s                             {: RESULT = s; :}
                        | curly_braced:s                            {: RESULT = s; :}
                        | tilde                                     {: RESULT = " "; :}
                        | percent                                   {: RESULT = "%"; :}
                        | escaped_backslash                         {: RESULT = "\n"; :}
                        | href
                        ;

href ::= LATEX_HREF LEFTCURLYBRACE href_string RIGHTCURLYBRACE ;
href_string ::= href_string basic_string | href_string UNDERSCORE | basic_string ;


/* atomic units that are not divided */
cmd_title           ::= CMD_TITLE find_left left_curly_brace ;
cmd_sheet           ::= CMD_SHEET find_left left_curly_brace ;
cmd_text            ::= CMD_TEXT opt_whitespace;
cmd_header          ::= CMD_HEADER opt_whitespace;
cmd_check           ::= CMD_CHECK opt_whitespace;
left_curly_brace    ::= LEFTCURLYBRACE opt_whitespace ;
right_curly_brace   ::= RIGHTCURLYBRACE WHITESPACE                          {: RESULT = " "; :}
                        | RIGHTCURLYBRACE                                   {: RESULT = ""; :}
                        ;
latex_cmd           ::= LATEX_CMD opt_whitespace ;
dollarsign          ::= DOLLARSIGN opt_whitespace ;
tilde               ::= TILDE opt_whitespace ;
percent             ::= PERCENT opt_whitespace ;
escaped_backslash   ::= ESCAPED_BACKSLASH opt_whitespace                    {: RESULT = "\n"; :} ;
basic_string        ::= LATEXSTRING:ls WHITESPACE                           {: RESULT = ls + " "; :}
                        | LATEXSTRING:ls                                    {: RESULT = ls; :}
                        ;
opt_whitespace      ::= WHITESPACE | /* nothing */ ;






/*
            |
            KW_LABLETHEADER LCURLY LATEXSTRING:s
            {:
                System.out.println("\tsheet:addHeader(\""+s+"\")");
            :}
            RCURLY
            |
            KW_LABLETCHECK LCURLY LATEXSTRING:s
            {:
                System.out.println("\tsheet:addCheckQuestion(\""+s+"\")");
            :}
            RCURLY
            |
            KW_LABLETVIDEO LCURLY LATEXSTRING:s1 RCURLY LCURLY LATEXSTRING:s2
            {:
                ++videonumber;
                System.out.println("\tlocal cameraExperiment"+videonumber+" = sheet:addCameraExperiment()");
                System.out.println("\tcameraExperiment"+videonumber+":setDescriptionText(\""+s2+"\")");
                System.out.println("\tlocal "+s1+" = cameraExperiment"+videonumber+":getExperiment()");
            :}
            RCURLY
            |
            horizontal
*/
/*
video_sheet ::=     KW_BEGIN LCURLY KW_LABLETVIDEOPAGE RCURLY LCURLY LATEXSTRING:ls RCURLY
                    {:  ++sheetnumber;
                        System.out.println();
                        System.out.println("\t-- SHEET "+sheetnumber);
                        System.out.println("\tlocal sheet = builder:create(\"Sheet\")");
                        System.out.println("\tbuilder:add(sheet)");
                        System.out.println("\tsheet:setTitle(\"" + ls + "\")"); :}
                    elems
                    |
                    KW_BEGIN LCURLY KW_LABLETVIDEOPAGE RCURLY LCURLY LATEXSTRING:ls RCURLY KW_HORIZONTAL
                    {:  ++sheetnumber;
                        System.out.println();
                        System.out.println("\t-- SHEET "+sheetnumber);
                        System.out.println("\tlocal sheet = builder:create(\"Sheet\")");
                        System.out.println("\tbuilder:add(sheet)");
                        System.out.println("\tsheet:setMainLayoutOrientation(\"horizontal\")");
                        System.out.println("\tsheet:setTitle(\"" + ls + "\")"); :}
                    elems ;

motion_sheet ::=    KW_LABLETMOTIONPAGE LCURLY LATEXSTRING:l1 RCURLY
                                        LCURLY LATEXSTRING:l2 RCURLY
                                        LCURLY LATEXSTRING:l3 RCURLY
                    {:  ++sheetnumber;
                        System.out.println();
                        System.out.println("\t-- SHEET "+sheetnumber);
                        System.out.println("\tlocal sheet = builder:create(\"MotionAnalysis\")");
                        System.out.println("\tbuilder:add(sheet)");
                        System.out.println("\tsheet:setTitle(\"" + l1 + "\")");
                        System.out.println("\tsheet:setExperiment(" + l2 + ")");
                        System.out.println("\tsheet:setDescriptionText(\"" + l3 + "\")"); :}
                    ;

calc_y_sheet ::=    KW_LABLETCALCYSPEED LCURLY LATEXSTRING:l1 RCURLY
                                        LCURLY LATEXSTRING:l2 RCURLY
                                        LCURLY LATEXSTRING:l3 RCURLY
                    {:  ++sheetnumber;
                        System.out.println();
                        System.out.println("\t-- SHEET "+sheetnumber);
                        System.out.println("\tlocal sheet = builder:create(\"CalculateYSpeed\")");
                        System.out.println("\tbuilder:add(sheet)");
                        System.out.println("\tsheet:setExperiment(" + l2 + ")");
                        System.out.println("\tsheet:setTitle(\"" + l1 + "\")");
                        System.out.println("\tsheet:setHeader(\"" + l3 + "\")"); :}
                    ;

named_elems ::=
            named_elem named_elems
            | named_elem ;
named_elem ::=
            KW_LABLETTEXT LCURLY LATEXSTRING:s
            {:
                System.out.println("\tsheet:addText(\""+s+"\", "+element+")");
            :}
            RCURLY
            |
            KW_LABLETHEADER LCURLY LATEXSTRING:s
            {:
                System.out.println("\tsheet:addHeader(\""+s+"\", "+element+")");
            :}
            RCURLY
            |
            KW_LABLETCHECK LCURLY LATEXSTRING:s
            {:
                System.out.println("\tsheet:addCheckQuestion(\""+s+"\", "+element+")");
            :}
            RCURLY
            |
            horizontal
            ;
horizontal ::=
            KW_HORIZONTALTWO
            {:
                Integer h = ++horizontalnumber;
                Integer n = sheetnumber;
                element = "horizontalLayout";
                System.out.println();
                System.out.println("\tlocal "+element+" = sheet:addHorizontalGroupLayout()");
            :}
            LCURLY vertical RCURLY
            LCURLY vertical RCURLY
            |
            KW_HORIZONTALTHREE
            {:
                Integer h = ++horizontalnumber;
                Integer n = sheetnumber;
                element = "horizontalLayout";
                System.out.println();
                System.out.println("\tlocal "+element+" = sheet:addHorizontalGroupLayout()");
            :}
            LCURLY vertical RCURLY
            LCURLY vertical RCURLY
            LCURLY vertical RCURLY
            ;
vertical ::=
            {:
                Integer v = ++verticalnumber;
                prev = element;
                element = "verticalLayout";
                System.out.println();
                System.out.println("\tlocal "+element+" = sheet:addVerticalGroupLayout("+prev+")");
            :}
            named_elems
            {: element = prev; :}
            ;
*/
